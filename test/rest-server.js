// Generated by CoffeeScript 1.7.1
(function() {
  var request, should;

  should = require('should');

  request = require('supertest');

  describe('RestSevice', function() {
    before(function(done) {
      this.url = "http://localhost:8080";
      return done();
    });
    return describe('First level of beer styles and links', function() {
      var address;
      address = '/getData';
      return it('Should have a correctly structured json object', function(done) {
        return request(this.url).get(address).expect('Content-Type', /json/).expect(200).end(function(err, res) {
          var key, link, responseData, _i, _j, _len, _len1, _ref, _ref1;
          responseData = JSON.parse(res.body);
          if (err) {
            throw err;
          }
          Object.keys(responseData).length.should.not.equal(0);
          _ref = Object.keys(responseData);
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            key = _ref[_i];
            key.should.be.type('string');
            responseData[key].should.have.property('name')["with"].type('string');
            responseData[key].should.have.property('superNode')["with"].type('boolean');
            responseData[key].should.have.property('type')["with"].type('string');
            responseData[key].should.have.property('links');
            Array.isArray(responseData[key].links).should.equal(true);
            _ref1 = responseData[key].links;
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              link = _ref1[_j];
              link.should.be.type('number');
            }
          }
          return done();
        });
      });
    });
  });

}).call(this);
